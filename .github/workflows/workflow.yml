name: deploy-app-website
concurrency: azure-app-deploy

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  AZURE_CONTAINER_REGISTRY_NAME: photoragacr
  AZURE_OPENAI_API_DEPLOYMENT_NAME: gpt-4o-2024-08-06
  AZURE_OPENAI_API_EMBEDDING_DEPLOYMENT_NAME: text-embedding-ada-002
  AZURE_OPENAI_API_INSTANCE_NAME: photorag-openai
  AZURE_OPENAI_API_VERSION: 2024-06-01
  AZURE_RESOURCEGROUP_NAME: photorag
  AZURE_WEB_APP_NAME: photoragweb
  NEXT_PUBLIC_SITE_URL: https://rag.photomuse.ai

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy Bicep
        uses: azure/arm-deploy@v2
        with:
          deploymentName: ${{ github.run_number }}
          resourceGroupName: ${{ env.AZURE_RESOURCEGROUP_NAME }}
          template: ./deploy/main.bicep
          parameters: >
            acrName=${{ env.AZURE_CONTAINER_REGISTRY_NAME }}
            azureAiEndpoint=${{ secrets.AZURE_AI_ENDPOINT }}
            azureOpenAiApiDeploymentName=${{ env.AZURE_OPENAI_API_DEPLOYMENT_NAME }}
            azureOpenAiApiEmbeddingDeploymentName=${{ env.AZURE_OPENAI_API_EMBEDDING_DEPLOYMENT_NAME }}
            azureOpenAiApiEndpoint=${{ secrets.AZURE_OPENAI_API_ENDPOINT }}
            azureOpenAiApiInstanceName=${{ env.AZURE_OPENAI_API_INSTANCE_NAME }}
            azureOpenAiApiKey=${{ secrets.AZURE_OPENAI_API_KEY }}
            azureOpenAiApiVersion=${{ env.AZURE_OPENAI_API_VERSION }}
            azureStorageConnString=${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
            azureStorageAccountName=${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}
            azureStorageAccountKey=${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}
            azureVisionApiKey=${{ secrets.AZURE_VISION_API_KEY }}
            dbUrl=${{ secrets.DB_URL }}
            emailConnString=${{ secrets.AZURE_EMAIL_CONN_STRING }}
            photomuseApiKey=${{ secrets.PHOTOMUSE_API_KEY }}
            siteUrl=${{ env.NEXT_PUBLIC_SITE_URL }}
            webAppName=${{ env.AZURE_WEB_APP_NAME }}
          scope: 'resourcegroup'

      - name: Create build script
        run: |
          cat << EOF > build_script.sh
          #!/bin/bash
          az acr build \
            --resource-group "${{ env.AZURE_RESOURCEGROUP_NAME }}" \
            --registry "${{ env.AZURE_CONTAINER_REGISTRY_NAME }}" \
            --image "${{ env.AZURE_WEB_APP_NAME }}:${{ github.sha }}" \
            --image "${{ env.AZURE_WEB_APP_NAME }}:latest" \
            --build-arg AZURE_STORAGE_CONNECTION_STRING="$AZURE_STORAGE_CONNECTION_STRING" \
            --build-arg AZURE_STORAGE_ACCOUNT_KEY="$AZURE_STORAGE_ACCOUNT_KEY" \
            --build-arg AZURE_STORAGE_ACCOUNT_NAME="${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}" \
            --build-arg AZURE_OPENAI_API_KEY="${{ secrets.AZURE_OPENAI_API_KEY }}" \
            --build-arg AZURE_OPENAI_API_ENDPOINT="${{ secrets.AZURE_OPENAI_API_ENDPOINT }}" \
            --build-arg AZURE_OPENAI_API_DEPLOYMENT_NAME="${{ env.AZURE_OPENAI_API_DEPLOYMENT_NAME }}" \
            --build-arg AZURE_OPENAI_API_EMBEDDING_DEPLOYMENT_NAME="${{ env.AZURE_OPENAI_API_EMBEDDING_DEPLOYMENT_NAME }}" \
            --build-arg AZURE_OPENAI_API_INSTANCE_NAME="${{ env.AZURE_OPENAI_API_INSTANCE_NAME }}" \
            --build-arg AZURE_OPENAI_API_VERSION="${{ env.AZURE_OPENAI_API_VERSION }}" \
            .
          EOF

      - name: Run build script
        env:
          AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
          AZURE_STORAGE_ACCOUNT_KEY: ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}
        run: |
          chmod +x build_script.sh
          ./build_script.sh

      - name: Update Web App with new image
        run: |
          az webapp config container set --name ${{ env.AZURE_WEB_APP_NAME }} \
                                        --resource-group ${{ env.AZURE_RESOURCEGROUP_NAME }} \
                                        --container-image-name ${{ env.AZURE_CONTAINER_REGISTRY_NAME }}.azurecr.io/${{ env.AZURE_WEB_APP_NAME }}:${{ github.sha }}

      - name: Restart Web App
        run: |
          az webapp restart --name ${{ env.AZURE_WEB_APP_NAME }} \
                            --resource-group ${{ env.AZURE_RESOURCEGROUP_NAME }}
